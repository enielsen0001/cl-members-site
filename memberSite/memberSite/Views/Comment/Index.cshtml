@model PagedList.IPagedList<memberSite.Models.Comment>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<h2>@ViewBag.Message</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<form method="get">
    <input type="search" name="searchTerm" />
    <input type="submit" value="Search By Name" />

</form>
<table class="table">
    <tr>
        <th>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().userDetail.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().userDetail.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Subject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CommentText)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td><img src="http://www.gravatar.com/avatar/@Html.DisplayFor(modelItem =>item.userDetail.EmailHash)?d=mm" /></td>
            <td>
                @Html.DisplayFor(modelItem => item.userDetail.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.userDetail.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommentText)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new
       {
           id = item.ID
       }) |
                @Html.ActionLink("Details", "Details", new
       {
           id = item.ID
       }) |
                @Html.ActionLink("Delete", "Delete", new
       {
           id = item.ID
       })
            </td>
        </tr>
    }
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter
    }))