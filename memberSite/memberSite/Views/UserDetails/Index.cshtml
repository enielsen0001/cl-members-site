@model PagedList.IPagedList<memberSite.Models.UserDetails>
@using PagedList.Mvc;
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Index";
}
<section>
    <h2>Member Home</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <h2>@ViewBag.Message</h2>
    <form method="get" class="searchForm">
        <input type="search" name="searchTerm" />
        <input type="submit" value="Search" class="btn btn-info" />
    </form>
</section>
<section class="indexList">
    @foreach (var item in Model)
    {
        <div class="itemWrapper row">
            <hr />
            <div class="col-sm-3">
                
                    <img class="profileImage" src="http://www.gravatar.com/avatar/@Html.DisplayFor(modelItem => item.EmailHash)?d=mm&s=180" />
                
                <div role="navigation" class="eddLinks hidden-xs">
                    @Html.ActionLink("See Full Profile", "Details", new
               {
                   id = item.ID
               }, new
               {
                   @class = "btn btn-info"
               })

                  
              @if (item.RegisteredUserID == System.Web.HttpContext.Current.User.Identity.GetUserId()||User.IsInRole("Admin"))
              {

                @Html.ActionLink("Edit", "Edit", new
           {
               id = item.ID
           })


                @Html.ActionLink("Delete", "Delete", new
           {
               id = item.ID
           })

              }
            
                </div>
            </div>

            <div class="col-sm-9">
                <ul>
                    <li>@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</li>
                    <li>@Html.DisplayFor(modelItem => item.Email)</li>
                    <li>&nbsp;</li>
                    <li>@Html.DisplayFor(modelItem => item.AboutTrimmed)</li>
                </ul>
                <div class="badges">

                    @if (item.FrontEnd == true)
                    {

                        <img src="@Url.Content("~/images/Badges/Badge_fe.png")" alt="Legacy Front end Badge" />
                    }
                    @if (item.MeanJS == true)
                    {

                        <img src="@Url.Content("~/images/Badges/Badge_js.png")" alt="Full Stack Javascript Badge" />
                    }
                    @if (item.PHP == true)
                    {
<img src = "@Url.Content("~/images/Badges/Badge_php.png")" alt="PHP Badge" />
                    }
                    @if (item.DotNet == true)
                    {

                        <img src="@Url.Content("~/images/Badges/Badge_net.png")" alt="Dot Net Badge" />
                    }
                    @if (item.RubyOnRails == true)
                    {

                        <img src="@Url.Content("~/images/Badges/Badge_ruby.png")" alt="Ruby Badge" />
                    }
                    @if (item.iOS == true)
                    {

                        <img src="@Url.Content("~/images/Badges/Badge_ios.png")" alt="iOS Badge" />
                    }
                    @if (item.Android == true)
                    {

                        <img src="@Url.Content("~/images/Badges/Badge_android.png")" alt="Android Badge" />
                    }
                    @if (item.Mentor == true)
                    {

                        <img src="@Url.Content("~/images/Badges/Badge_mentor.png")" alt="Mentor Badge" />
                    }
                </div>
                <div role="navigation" class="eddLinks  visible-xs">
                    @Html.ActionLink("See Full Profile", "Details", new
               {
                   id = item.ID
               }, new
               {
                   @class = "btn btn-info"
               })
@if (item.RegisteredUserID == System.Web.HttpContext.Current.User.Identity.GetUserId() || User.IsInRole("Admin"))
{

                @Html.ActionLink("Edit", "Edit", new
           {
               id = item.ID
           })


                @Html.ActionLink("Delete", "Delete", new
           {
               id = item.ID
           })

}    
            </div>
        </div>
    </div>
    }
</section>

        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter
    }))